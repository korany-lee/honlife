<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="mappers.careMapper">
<cache/>

<sql id="baseRecruit">
RECRUIT_NO, RECRUIT_NAME, RECRUIT_PH, RECRUIT_JUMIN, RECRUIT_EMAIL, 
RECRUIT_ADDR, RECRUIT_ADDRDETAIL, RECRUIT_CLASS, RECRUIT_GENDER, 
ORIGINAL_FILE_NAME, STORE_FILE_NAME, FILE_SIZE, RECRUIT_PHOTO,POSTCODE,POINTS 
</sql>

<insert id="insertRegist">
		insert into recruit ( <include refid="baseRecruit"/>)
		values(rec_seq.nextval, #{recruitName}, #{recruitPh}, 
					#{recruitJumin}, #{recruitEmail}, 
				#{recruitAddr}, #{recruitAddrDetail}, #{recruitClass}, #{recruitGender}, 
				#{originalFileName}, #{storeFileName}, 
				#{fileSize}, #{recruitPhoto},#{postcode},0
				)

</insert>

<resultMap type="Model.DTO.care.RecruitDTO" id="recList">
		<id column="RECRUIT_NO" jdbcType="BIGINT" property="recruitNo" />
		<result  column="RECRUIT_NAME" jdbcType="VARCHAR" property="recruitName" />
		<result  column="RECRUIT_PH" jdbcType="VARCHAR" property="recruitPh" />
		<result  column="RECRUIT_JUMIN" jdbcType="BIGINT" property="recruitJumin" />
		<result  column="RECRUIT_EMAIL" jdbcType="VARCHAR" property="recruitEmail" />
		<result  column="RECRUIT_ADDR" jdbcType="VARCHAR" property="recruitAddr" />
		<result column="RECRUIT_ADDRDETAIL" jdbcType="VARCHAR" property="recruitAddrDetail"/>
		<result  column="RECRUIT_CLASS" jdbcType="VARCHAR" property="recruitClass" />
		<result  column="RECRUIT_GENDER" jdbcType="VARCHAR" property="recruitGender" />
		<result  column="ORIGINAL_FILE_NAME" jdbcType="VARCHAR" property="originalFileName" />
		<result  column="STORE_FILE_NAME" jdbcType="VARCHAR" property="storeFileName" />
		<result  column="FILE_SIZE" jdbcType="VARCHAR" property="fileSize" />
		<result  column="RECRUIT_PHOTO" jdbcType="VARCHAR" property="recruitPhoto" />
		<result  column="INTERVIEW" jdbcType="BIGINT" property="interview"/>
		<result column="POSTCODE" jdbcType="VARCHAR" property="postcode"/>
		<result  column="POINTS" jdbcType="BIGINT" property="points" />
		
</resultMap>





<select id="interviewListSelect" resultMap="recList"  >
		select  RECRUIT_NO, RECRUIT_NAME, RECRUIT_PH, RECRUIT_JUMIN, RECRUIT_EMAIL, 
		RECRUIT_ADDR, RECRUIT_ADDRDETAIL,  RECRUIT_CLASS, RECRUIT_GENDER, 
		ORIGINAL_FILE_NAME, STORE_FILE_NAME, FILE_SIZE, RECRUIT_PHOTO, POINTS, INTERVIEW from recruit
		<where>
				points >= 60 or recruit_Class = 'lm' 
				
		</where>
</select>



<select id="reclistSelect" resultMap="recList"  >
		select <include refid="baseRecruit" /> from recruit
		<where>
				<if test="value != null">
							RECRUIT_NO = #{recruitNo}	
							and interview is null		
				</if>		
		</where>
</select>


<delete id="recruitDelete" parameterType="Model.DTO.care.RecruitDTO">
	delete from recruit
	 where recruit_no = #{recruitNo}
	

</delete>

<select id="recruitOneSelect" parameterType="Model.DTO.care.RecruitDTO" resultMap="recList">
	select RECRUIT_NO, RECRUIT_NAME, RECRUIT_PH, RECRUIT_JUMIN, RECRUIT_EMAIL, 
			 RECRUIT_ADDR, RECRUIT_ADDRDETAIL, RECRUIT_CLASS, 
			 RECRUIT_GENDER, ORIGINAL_FILE_NAME, POSTCODE,
			 STORE_FILE_NAME, RECRUIT_PHOTO  from recruit
	where RECRUIT_NO = #{recruitNo}			

</select>

<update id="upPoint" parameterType="Model.DTO.care.RecruitDTO">
		
	update recruit 
		set points = #{points}
	where recruit_no = #{recruitNo}
	and points = 0
	
</update>

<update id="intChkUp" parameterType="Model.DTO.care.RecruitDTO">
	update recruit 
	set interview = 1
	where recruit_no = #{recruitNo}
	and interview is null

</update>


<sql id="empBase">
	EMPLOYEE_NO, EMPLOYEE_NAME, EMPLOYEE_WORKFIELD, EMPLOYEE_CALLNUM,
	 EMPLOYEE_JUMIN, EMPLOYEE_PHOTO, EMPLOYEE_SCORE, EMPLOYEE_BAD,
	EMPLOYEE_ADDR, EMPLOYEE_GENDER, EMPLOYEE_PH, EMPLOYEE_ADDRPOST,
	EMPLOYEE_ADDRDETAIL, EMPLOYEE_EMAIL,REV_CHK
</sql>


<resultMap type="Model.DTO.care.EmployeeDTO" id="empList">
		<id column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo" />
		<result  column="EMPLOYEE_NAME" jdbcType="VARCHAR" property="employeeName" />
		<result  column="EMPLOYEE_WORKFIELD" jdbcType="VARCHAR" property="employeeWorkField" />
		<result  column="EMPLOYEE_CALLNUM" jdbcType="BIGINT" property="employeeCallnum" />
		<result  column="EMPLOYEE_JUMIN" jdbcType="INTEGER" property="employeeJumin" />
		<result  column="EMPLOYEE_PHOTO" jdbcType="VARCHAR" property="employeePhoto" />
		<result column="EMPLOYEE_SCORE" jdbcType="BIGINT" property="employeeScore" />
		<result column="EMPLOYEE_BAD" jdbcType="VARCHAR" property="employeeBad"/>	
		<result  column="EMPLOYEE_ADDR" jdbcType="VARCHAR" property="employeeAddr" />
		<result  column="EMPLOYEE_GENDER" jdbcType="VARCHAR" property="employeeGender" />
		<result  column="EMPLOYEE_PH" jdbcType="VARCHAR" property="employeePh" />
		<result  column="EMPLOYEE_ADDRPOST" jdbcType="VARCHAR" property="employeeAddrPost" />	
		<result  column="EMPLOYEE_ADDRDETAIL" jdbcType="VARCHAR" property="employeeAddrDetail" />	
        <result  column="EMPLOYEE_EMAIL" jdbcType="VARCHAR" property="employeeEmail" />
        <result column="REV_CHK" jdbcType="BIGINT" property="revChk"/>
        <association property="cr" javaType="Model.DTO.care.CleanRevDTO" resultMap="rev" />
        <association property="co" javaType="Model.DTO.care.CleanOrderDTO" resultMap="orderList"></association>
</resultMap>

<resultMap type="Model.DTO.care.EmployeeDTO" id="emprev">
		<id column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo" />
		<result  column="empname" jdbcType="VARCHAR" property="employeeName" />
		<result  column="EMPLOYEE_WORKFIELD" jdbcType="VARCHAR" property="employeeWorkField" />
		<result  column="EMPLOYEE_CALLNUM" jdbcType="BIGINT" property="employeeCallnum" />
		<result  column="EMPLOYEE_JUMIN" jdbcType="INTEGER" property="employeeJumin" />
		<result  column="EMPLOYEE_PHOTO" jdbcType="VARCHAR" property="employeePhoto" />
		<result column="EMPLOYEE_SCORE" jdbcType="BIGINT" property="employeeScore" />
		<result column="EMPLOYEE_BAD" jdbcType="VARCHAR" property="employeeBad"/>	
		<result  column="EMPLOYEE_ADDR" jdbcType="VARCHAR" property="employeeAddr" />
		<result  column="EMPLOYEE_GENDER" jdbcType="VARCHAR" property="employeeGender" />
		<result  column="EMPLOYEE_PH" jdbcType="VARCHAR" property="employeePh" />
		<result  column="EMPLOYEE_ADDRPOST" jdbcType="VARCHAR" property="employeeAddrPost" />	
		<result  column="EMPLOYEE_ADDRDETAIL" jdbcType="VARCHAR" property="employeeAddrDetail" />	
        <result  column="EMPLOYEE_EMAIL" jdbcType="VARCHAR" property="employeeEmail" />
        <result column="REV_CHK" jdbcType="BIGINT" property="revChk"/>
        <association property="cr" javaType="Model.DTO.care.CleanRevDTO" resultMap="rev" />
</resultMap>

<insert id="empRegist">
	insert into employee (<include refid="empBase" />)

	values (#{employeeNo},#{employeeName},#{employeeWorkField},#{employeeCallnum}, 
		   #{employeeJumin},#{employeePhoto},0,'N', 
		   #{employeeAddr},#{employeeGender},#{employeePh},#{employeeAddrPost},
		   #{employeeAddrDetail},#{employeeEmail},0 )

</insert>


<select id="empListSelect" resultMap="empList"  >
		select <include refid="empBase" /> from employee
		<where>
				<if test="value != null">
							EMPLOYEE_NO = #{employeeNo}	
									
				</if>		
		</where>
</select>


<sql id="cleanOrderBase">
CLEANORDER_NO, EMPLOYEE_NO ,CLEANORDER_DATE, CLEANORDER_RECEIVE_DATE, 
CLEANORDER_COMPANY_NAME, CLEANORDER_ADDRESS,
CLEANORDER_COMPANY_HP, CLEANORDER_COMPANY_FAX, CLEANORDER_POSTCODE,
CLEANORDER_ADDRDETAIL, ALLSUM, MOVEHOW, MOVEPAY, ORDER_CHK 
</sql>

<resultMap type="Model.DTO.care.CleanOrderDTO" id="orderList" >
	<id column="CLEANORDER_NO" jdbcType="VARCHAR" property="cleanorderNo"/>
	<id column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo"/>
	<result column="CLEANORDER_DATE" jdbcType="DATE" property="cleanorderDate"/>
	<result column="CLEANORDER_RECEIVE_DATE" jdbcType="DATE" property="cleanorderReceiveDate"/>
	<result column="CLEANORDER_COMPANY_NAME" jdbcType="VARCHAR" property="cleanorderCompanyName"/>
	<result column="CLEANORDER_ADDRESS" jdbcType="VARCHAR" property="cleanorderAddress"/>
	<result column="CLEANORDER_COMPANY_HP" jdbcType="BIGINT" property="cleanorderCompanyPh"/>
	<result column="CLEANORDER_COMPANY_FAX" jdbcType="BIGINT" property="cleanorderCompanyFax"/>
	<result column="CLEANORDER_POSTCODE" jdbcType="VARCHAR" property="cleanorderPostcode"/>
	<result column="CLEANORDER_ADDRDETAIL" jdbcType="VARCHAR" property="cleanorderAddrdetail"/>
	<result column="ALLSUM" jdbcType="BIGINT" property="allsum"/>
	<result column="MOVEHOW" jdbcType="VARCHAR" property="moveHow"/>
	<result column="MOVEPAY" jdbcType="VARCHAR" property="movePay"/>
	<result column="ORDER_CHK" jdbcType="VARCHAR" property="orderChk" />
	<association property="empDTO" javaType="Model.DTO.care.EmployeeDTO" resultMap="empList"/>
	<association property="itemDTO" javaType="Model.DTO.care.CleanitemInsert" resultMap="itemList" />
</resultMap>


<select id="orderInsert" parameterType="Model.DTO.care.CleanOrderDTO">
	insert into cleanorder (<include refid="cleanOrderBase"/>)
	
	values (#{cleanorderNo},#{employeeNo},#{cleanorderDate},#{cleanorderReceiveDate},
	#{cleanorderCompanyName},#{cleanorderAddress},#{cleanorderCompanyPh},
	#{cleanorderCompanyFax},#{cleanorderPostcode},#{cleanorderAddrdetail},
	#{allsum},#{moveHow},#{movePay},null
	)
</select>

	


	<resultMap type="Model.DTO.care.EmptoItemOrderDTO" id="EtoODTO">
		<association property="orderDTO" javaType="Model.DTO.care.CleanOrderDTO" resultMap="orderList"  />
		<association property="empDTO" javaType="Model.DTO.care.EmployeeDTO" resultMap="empList"/>
	
	</resultMap>

<select id="orderListSelect" resultMap="orderList" > 
select   c.CLEANORDER_NO, c.CLEANORDER_DATE, c.CLEANORDER_RECEIVE_DATE, 
		    c.CLEANORDER_COMPANY_NAME, c.CLEANORDER_ADDRESS,
			c.CLEANORDER_COMPANY_HP, c.CLEANORDER_COMPANY_FAX, c.CLEANORDER_POSTCODE,
			c.CLEANORDER_ADDRDETAIL, c.ALLSUM, c.MOVEHOW, c.MOVEPAY, c.ORDER_CHK,
			e.EMPLOYEE_NO, e.EMPLOYEE_NAME, e.EMPLOYEE_WORKFIELD, 	  
	         e.EMPLOYEE_PH, e.EMPLOYEE_EMAIL, t.CLEANITEM_NO, t.CLEANITEM_NAME, t.CLEANITEM_PRICE, 
	         t.CLEANITEM_QTY, t.CLEANITEM_SUMPRICE , t.EMPLOYEE_NO, t.ClEANORDER_NO
	         
from     employee e , cleanorder c , cleanitem t
where    e.employee_no = c.employee_no
and        c.cleanorder_no = t.cleanorder_no
    
</select>
<resultMap type="Model.DTO.care.CleanitemInsert" id="itemList">
			<id column="CLEANITEM_NO" jdbcType="VARCHAR" property="cleanitemNo"/>
			<result column="CLEANITEM_NAME" jdbcType="VARCHAR" property="cleanitemName"/>
			<result column="CLEANITEM_PRICE" jdbcType="VARCHAR" property="cleanitemPrice"/>
			<result column="CLEANITEM_QTY" jdbcType="VARCHAR" property="cleanitemQty"/>
			<result column="CLEANITEM_REALQTY" jdbcType="VARCHAR" property="cleanitemrealQty"/>
			<result column="CLEANITEM_SUMPRICE" jdbcType="VARCHAR" property="cleanitemSumprice"/>
			<result column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo"/>
			<result column="ClEANORDER_NO" jdbcType="VARCHAR" property="cleanorderNo"/>
	</resultMap>
	
	
	<update id="orderChk" parameterType="string">
	update cleanorder 
		set order_chk = 1
	where cleanorder_no = #{cleanorderNo}
	and order_chk is null
</update>
<sql id="itemBase">
	CLEANITEM_NO, CLEANITEM_NAME, CLEANITEM_PRICE, CLEANITEM_QTY,
    CLEANITEM_SUMPRICE ,EMPLOYEE_NO,ClEANORDER_NO,CLEANITEM_REALQTY
</sql>

<insert id="itemInsert">

		insert into cleanitem (<include refid="itemBase"/>)
		values ( item_seq.nextval,#{cleanitemName}, #{cleanitemPrice} ,#{cleanitemQty}, #{cleanitemSumprice},
					#{employeeNo},#{cleanorderNo},#{cleanitemrealQty})

</insert>



<select id="orderTableList" parameterType="string"  resultMap="itemList">
	select  <include refid="itemBase"   />
		from cleanitem 
		where cleanorder_No = #{cleanorderNo}
</select>

<select id="empDetail" parameterType="string" resultMap="empList">
	select <include refid="empBase" />
	from employee
	where employee_no = #{employeeNo}

 

</select>

<resultMap type="Model.DTO.care.CleanFeeDTO" id="fee">
	<id column="CLEANFEE_SIZE" jdbcType="BIGINT" property="cleanSize"/>
	<result column="CLEANFEE_FEE" jdbcType="BIGINT" property="cleanFee"/>
</resultMap>

<select id="fee" resultMap="fee">
	select cleanfee_Fee, cleanfee_size 
    from	cleanfee 
</select>



<sql id="baseRev">
c.CLEANREV_NO, c.USER_NO, c.EMPLOYEE_NO, c.CLEANFEE_SIZE,
c.CLEANREV_DEMAND, c.CLEANREV_DATE, c.CLEANREV_TIME, 
c.CLEANREV_ADDR, c.REV_PAY, c.REV_COUNT, c.REV_CHK
</sql>

	<resultMap type="Model.DTO.MemberDTO" id="baseMember">
		<id column="USER_NO" jdbcType="VARCHAR" property="userNo"/>
		<result column="USER_ID" jdbcType="VARCHAR" property="userId" />
		<result column="USER_PW" jdbcType="VARCHAR" property="userPw" />
		<result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
		<result column="USER_PH" jdbcType="VARCHAR" property="userPh" />
		<result column="USER_EMAIL" jdbcType="VARCHAR" property="userEmail" />
		<result column="USER_ADDR" jdbcType="VARCHAR" property="userAddr" />
		<result column="USER_ZONE" jdbcType="VARCHAR" property="userZone" />
		<result column="USER_GENDER" jdbcType="VARCHAR" property="userGender" />
		<result column="USER_BIRTH" jdbcType="DATE" property="userBirth" />
		<result column="USER_REGIST" jdbcType="TIMESTAMP" property="userResist" />
		<result column="CONNECT_DATE" jdbcType="TIMESTAMP" property="connectDate" />
		<result column="ROLE" jdbcType="VARCHAR" property="role" />	
	</resultMap>
	
	<resultMap type="Model.DTO.care.RevChkDTO" id="rc">
	 <id column="REV_COUNT" jdbcType="BIGINT" property="revCount"/>
	 <result column="chk" jdbcType="BIGINT" property="revChk"/>
	 <result column="CLEANREV_DATE" jdbcType="TIMESTAMP" property="cleanrevDate"/>
	 <result column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo"/>
	 <result column="CLEANREV_TIME" jdbcType="VARCHAR" property="cleanrevTime"/>	
	</resultMap>
	<resultMap type="Model.DTO.care.RevChkDTO" id="rc1">
	 <id column="REV_COUNT" jdbcType="BIGINT" property="revCount"/>
	 <result column="REV_CHK" jdbcType="BIGINT" property="revChk"/>
	 <result column="CLEANREV_DATE" jdbcType="TIMESTAMP" property="cleanrevDate"/>
	 <result column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo"/>
	 <result column="CLEANREV_TIME" jdbcType="VARCHAR" property="cleanrevTime"/>	
	</resultMap>

<resultMap type="Model.DTO.care.CleanRevDTO" id="rev">
	<id column="CLEANREV_NO" jdbcType="VARCHAR" property="cleanrevNo" />
	<id column="USER_NO" jdbcType="VARCHAR" property="userNo" />
	<id column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo" />
	<id column="CLEANFEE_SIZE" jdbcType="BIGINT" property="cleanfeeSize" />
	<id column="REV_COUNT" jdbcType="BIGINT" property="revCount" />
     <result column="CLEANREV_DEMAND" jdbcType="VARCHAR" property="cleanrevDemand"/>
	<result column="CLEANREV_DATE" jdbcType="TIMESTAMP" property="cleanrevDate"/>
	<result column="CLEANREV_TIME" jdbcType="VARCHAR" property="cleanrevTime"/>
	<result column="CLEANREV_ADDR" jdbcType="VARCHAR" property="cleanrevAddr"/>
	<result column="REV_PAY" jdbcType="BIGINT" property="revPay"/>
	<result column="REV_CHK" jdbcType="BIGINT" property="revChk"/>
	<association property="memDTO" javaType="Model.DTO.MemberDTO" resultMap="baseMember" />
	<association property="empDTO" javaType="Model.DTO.care.EmployeeDTO" resultMap="empList" />
	<association property="rcDTO" javaType="Model.DTO.care.RevChkDTO" resultMap="rc"></association>
</resultMap>

<resultMap type="Model.DTO.care.CleanRevDTO" id="rev1">
	<id column="CLEANREV_NO" jdbcType="VARCHAR" property="cleanrevNo" />
	<id column="USER_NO" jdbcType="VARCHAR" property="userNo" />
	<id column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo" />
	<id column="CLEANFEE_SIZE" jdbcType="BIGINT" property="cleanfeeSize" />	
     <result column="CLEANREV_DEMAND" jdbcType="VARCHAR" property="cleanrevDemand"/>
	<result column="CLEANREV_DATE" jdbcType="TIMESTAMP" property="cleanrevDate"/>
	<result column="CLEANREV_TIME" jdbcType="VARCHAR" property="cleanrevTime"/>
	<result column="CLEANREV_ADDR" jdbcType="VARCHAR" property="cleanrevAddr"/>
	<result column="REV_PAY" jdbcType="BIGINT" property="revPay"/>
	<result column="REV_CHK" jdbcType="BIGINT" property="revChk"/>
	<result column="REV_COUNT" jdbcType="BIGINT" property="revCount" />
	<association property="memDTO" javaType="Model.DTO.MemberDTO" resultMap="baseMember" />
	<association property="empDTO" javaType="Model.DTO.care.EmployeeDTO" resultMap="emprev" />
	<association property="rcDTO" javaType="Model.DTO.care.RevChkDTO" resultMap="rc"></association>
</resultMap>



<insert id="revIn" parameterType="Model.DTO.care.CleanRevDTO">
	insert into cleanrev c (<include refid="baseRev" />)
	values(#{cleanrevNo},#{userNo},#{employeeNo},#{cleanfeeSize},#{cleanrevDemand},
			  #{cleanrevDate},#{cleanrevTime},#{cleanrevAddr},#{revPay}, #{revCount},#{revChk} )
</insert>

<select id="revDetail" parameterType="Model.DTO.care.CleanRevDTO" resultMap="rev" >
	select c.CLEANREV_NO, c.USER_NO, c.EMPLOYEE_NO, c.CLEANFEE_SIZE,
	c.CLEANREV_DEMAND, c.CLEANREV_DATE, c.CLEANREV_TIME, c.CLEANREV_ADDR, c.REV_PAY
	from cleanrev c
	where c.user_no = #{userNo} and
				c.cleanrev_no = #{cleanrevNo} 
</select>

<delete id="revDel" parameterType="Model.DTO.care.CleanRevDTO">
	delete from cleanrev 
	where cleanrev_no = #{cleanrevNo} 
</delete>

<select id="sucDetail" parameterType="Model.DTO.care.CleanRevDTO" resultMap="rev">
	select c.CLEANREV_NO, m.USER_NAME, m.USER_PH, m.USER_EMAIL,
			 c.CLEANREV_ADDR, c.CLEANREV_DATE, c.CLEANREV_TIME,
			 e.EMPLOYEE_NO,e.Employee_NAME, e.EMPLOYEE_PH, c.CLEANFEE_SIZE, 
			 c.CLEANREV_DEMAND, c.REV_PAY 
	from  cleanrev c , member m, employee e
	where c.USER_NO = m.USER_NO 
	and     c.EMPLOYEE_NO = e.EMPLOYEE_NO
	and    c.USER_NO = #{userNo}
	and    c.CLEANREV_NO = #{cleanrevNo}
</select>

<select id="empsel" parameterType="Model.DTO.care.CleanRevDTO" resultMap="empList">
    select  e.employee_no,e.employee_name
    from employee e
    where e.employee_no not in 
                    (select c.employee_no 
                      from cleanrev c
                      where c.cleanrev_date = #{cleanrevDate}   
                      and   c.cleanrev_time = #{cleanrevTime})
     and  e.EMPLOYEE_WORKFIELD = 'cm'  
                 
</select>

<update id="revchk" parameterType="string">
	update employee  
	set rev_chk = 1
	where employee_no = #{empNo}

</update>

<insert id="laundIn" >
	insert into laundryrev (LAUNDRYREV_NO,USER_NO,
                        			 LAUNDRYREV_DATE,LAUNDRYREV_RECDATE,LAUNDRYREV_ADDR )
	values(#{laundryrevNo},#{userNo},#{laundryrevDate},#{laundryrevRecdate},#{laundryrevAddr}  )
	
</insert>


<resultMap type="Model.DTO.laundry.LaundryRevDTO" id="laundryMap">
	<id column="LAUNDRYREV_NO"  jdbcType="VARCHAR" property="laundryrevNo"/>
	<id column="USER_NO"  jdbcType="VARCHAR" property="userNo"/>
	<result column="LAUNDRYREV_DATE" jdbcType="TIMESTAMP" property="laundryrevDate"/>
	<result column="LAUNDRYREV_RECDATE" jdbcType="TIMESTAMP" property="laundryrevRecdate"/>
	<result column="LAUNDRYREV_ADDR" jdbcType="VARCHAR" property="laundryrevAddr"/>
</resultMap>
<select id="Ldtatil" parameterType="string" resultMap="laundryMap">

	select   LAUNDRYREV_NO,USER_NO,
               LAUNDRYREV_DATE,LAUNDRYREV_RECDATE,
               LAUNDRYREV_ADDR
	from LAUNDRYREV
	where LAUNDRYREV_NO = #{laundryrevNo}
</select>

<insert id="chkIn" >
	insert into revchk (REV_COUNT, EMPLOYEE_NO, REV_CHK, CLEANREV_DATE, CLEANREV_TIME)
	values (c_seq.nextval,#{employeeNo},#{revChk},#{cleanrevDate},#{cleanrevTime})
	

</insert>

<select id="rcchk" parameterType="Model.DTO.care.RevChkDTO" resultMap="rc1"> 
	select *
	from revchk 
	where EMPLOYEE_NO = #{employeeNo}
	and  CLEANREV_DATE = #{cleanrevDate}
	and  CLEANREV_TIME = #{cleanrevTime}
</select>


<select id="cleanRevList" resultMap="rev1">
 	select c.CLEANREV_NO, c.USER_NO, c.EMPLOYEE_NO, c.CLEANFEE_SIZE,
			c.CLEANREV_DEMAND, c.CLEANREV_DATE, c.CLEANREV_TIME, 
			c.CLEANREV_ADDR, c.REV_PAY, m.user_name, empname, chk
from cleanrev c , member m , 
                        (select e.employee_name as empname,e.employee_no as empno,
                        					r.rev_chk as chk, r.rev_count as rc
                           from employee e, revchk r
                          where e.employee_no = r.employee_no
                                )sub
	where c.user_no = m.user_no
    and   c.employee_no = sub.empno
    and   c.rev_count = sub.rc
</select>

<select id="laundryList" resultMap="laundryMap">

	select *
	from laundryrev 

</select>

<select id="resel" parameterType="string" resultType="string" >
	select e.employee_no, e.employee_name
	from employee e
	where e.employee_no in 
							(select  o.employee_no
								from cleanorder o 
								where cleanorder_no = #{cleanorderNo} 						
							)
	and e.employee_workfield = 'cm'				
							
</select>

<select id="table" parameterType="string" resultMap="itemList">

	select * 	 
	from cleanitem 
	where cleanorder_no = #{cleanorderNo}

</select>


</mapper>