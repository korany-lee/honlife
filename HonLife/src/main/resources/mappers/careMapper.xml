<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="mappers.careMapper">
<cache/>

<sql id="baseRecruit">
RECRUIT_NO, RECRUIT_NAME, RECRUIT_PH, RECRUIT_JUMIN, RECRUIT_EMAIL, 
RECRUIT_ADDR, RECRUIT_ADDRDETAIL, RECRUIT_CLASS, RECRUIT_GENDER, 
ORIGINAL_FILE_NAME, STORE_FILE_NAME, FILE_SIZE, RECRUIT_PHOTO,POSTCODE,POINTS 
</sql>

<insert id="insertRegist">
		insert into recruit ( <include refid="baseRecruit"/>)
		values(rec_seq.nextval, #{recruitName}, #{recruitPh}, 
					#{recruitJumin}, #{recruitEmail}, 
				#{recruitAddr}, #{recruitAddrDetail}, #{recruitClass}, #{recruitGender}, 
				#{originalFileName}, #{storeFileName}, 
				#{fileSize}, #{recruitPhoto},#{postcode},0
				)

</insert>

<resultMap type="Model.DTO.care.RecruitDTO" id="recList">
		<id column="RECRUIT_NO" jdbcType="BIGINT" property="recruitNo" />
		<result  column="RECRUIT_NAME" jdbcType="VARCHAR" property="recruitName" />
		<result  column="RECRUIT_PH" jdbcType="BIGINT" property="recruitPh" />
		<result  column="RECRUIT_JUMIN" jdbcType="BIGINT" property="recruitJumin" />
		<result  column="RECRUIT_EMAIL" jdbcType="VARCHAR" property="recruitEmail" />
		<result  column="RECRUIT_ADDR" jdbcType="VARCHAR" property="recruitAddr" />
		<result column="RECRUIT_ADDRDETAIL" jdbcType="VARCHAR" property="recruitAddrDetail"/>
		<result  column="RECRUIT_CLASS" jdbcType="VARCHAR" property="recruitClass" />
		<result  column="RECRUIT_GENDER" jdbcType="VARCHAR" property="recruitGender" />
		<result  column="ORIGINAL_FILE_NAME" jdbcType="VARCHAR" property="originalFileName" />
		<result  column="STORE_FILE_NAME" jdbcType="VARCHAR" property="storeFileName" />
		<result  column="FILE_SIZE" jdbcType="VARCHAR" property="fileSize" />
		<result  column="RECRUIT_PHOTO" jdbcType="VARCHAR" property="recruitPhoto" />
		<result  column="INTERVIEW" jdbcType="BIGINT" property="interview"/>
		<result column="POSTCODE" jdbcType="VARCHAR" property="postcode"/>
		<result  column="POINTS" jdbcType="BIGINT" property="points" />
		
</resultMap>





<select id="interviewListSelect" resultMap="recList"  >
		select  RECRUIT_NO, RECRUIT_NAME, RECRUIT_PH, RECRUIT_JUMIN, RECRUIT_EMAIL, 
		RECRUIT_ADDR, RECRUIT_ADDRDETAIL,  RECRUIT_CLASS, RECRUIT_GENDER, 
		ORIGINAL_FILE_NAME, STORE_FILE_NAME, FILE_SIZE, RECRUIT_PHOTO, POINTS, INTERVIEW from recruit
		<where>
				points >= 60 or recruit_Class = 'lm' 
				
		</where>
</select>



<select id="reclistSelect" resultMap="recList"  >
		select <include refid="baseRecruit" /> from recruit
		<where>
				<if test="value != null">
							RECRUIT_NO = #{recruitNo}	
							and interview is null		
				</if>		
		</where>
</select>


<delete id="recruitDelete" parameterType="Model.DTO.care.RecruitDTO">
	delete from recruit
	 where recruit_no = #{recruitNo}
	

</delete>

<select id="recruitOneSelect" parameterType="Model.DTO.care.RecruitDTO" resultMap="recList">
	select RECRUIT_NO, RECRUIT_NAME, RECRUIT_PH, RECRUIT_JUMIN, RECRUIT_EMAIL, 
			 RECRUIT_ADDR, RECRUIT_ADDRDETAIL, RECRUIT_CLASS, 
			 RECRUIT_GENDER, ORIGINAL_FILE_NAME, POSTCODE,
			 STORE_FILE_NAME, RECRUIT_PHOTO  from recruit
	where RECRUIT_NO = #{recruitNo}			

</select>

<update id="upPoint" parameterType="Model.DTO.care.RecruitDTO">
		
	update recruit 
		set points = #{points}
	where recruit_no = #{recruitNo}
	and points = 0
	
</update>

<update id="intChkUp" parameterType="Model.DTO.care.RecruitDTO">
	update recruit 
	set interview = 1
	where recruit_no = #{recruitNo}
	and interview is null

</update>


<sql id="empBase">
	EMPLOYEE_NO, EMPLOYEE_NAME, EMPLOYEE_WORKFIELD, EMPLOYEE_CALLNUM,
	 EMPLOYEE_JUMIN, EMPLOYEE_PHOTO, EMPLOYEE_SCORE, EMPLOYEE_BAD,
	EMPLOYEE_ADDR, EMPLOYEE_GENDER, EMPLOYEE_PH, EMPLOYEE_ADDRPOST,
	EMPLOYEE_ADDRDETAIL, EMPLOYEE_EMAIL
</sql>


<resultMap type="Model.DTO.care.EmployeeDTO" id="empList">
		<id column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo" />
		<result  column="EMPLOYEE_NAME" jdbcType="VARCHAR" property="employeeName" />
		<result  column="EMPLOYEE_WORKFIELD" jdbcType="VARCHAR" property="employeeWorkField" />
		<result  column="EMPLOYEE_CALLNUM" jdbcType="BIGINT" property="employeeCallnum" />
		<result  column="EMPLOYEE_JUMIN" jdbcType="INTEGER" property="employeeJumin" />
		<result  column="EMPLOYEE_PHOTO" jdbcType="VARCHAR" property="employeePhoto" />
		<result column="EMPLOYEE_SCORE" jdbcType="BIGINT" property="employeeScore" />
		<result column="EMPLOYEE_BAD" jdbcType="VARCHAR" property="employeeBad"/>	
		<result  column="EMPLOYEE_ADDR" jdbcType="VARCHAR" property="employeeAddr" />
		<result  column="EMPLOYEE_GENDER" jdbcType="VARCHAR" property="employeeGender" />
		<result  column="EMPLOYEE_PH" jdbcType="BIGINT" property="employeePh" />
		<result  column="EMPLOYEE_ADDRPOST" jdbcType="VARCHAR" property="employeeAddrPost" />	
		<result  column="EMPLOYEE_ADDRDETAIL" jdbcType="VARCHAR" property="employeeAddrDetail" />	
       <result  column="EMPLOYEE_EMAIL" jdbcType="VARCHAR" property="employeeEmail" />
</resultMap>

<insert id="empRegist">
	insert into employee (<include refid="empBase" />)

	values (#{employeeNo},#{employeeName},#{employeeWorkField},#{employeeCallnum}, 
		   #{employeeJumin},#{employeePhoto},0,'N', 
		   #{employeeAddr},#{employeeGender},#{employeePh},#{employeeAddrPost},
		   #{employeeAddrDetail},#{employeeEmail} )

</insert>


<select id="empListSelect" resultMap="empList"  >
		select <include refid="empBase" /> from employee
		<where>
				<if test="value != null">
							EMPLOYEE_NO = #{employeeNo}	
									
				</if>		
		</where>
</select>


<sql id="cleanOrderBase">
CLEANORDER_NO, EMPLOYEE_NO ,CLEANORDER_DATE, CLEANORDER_RECEIVE_DATE, 
CLEANORDER_COMPANY_NAME, CLEANORDER_ADDRESS,
CLEANORDER_COMPANY_HP, CLEANORDER_COMPANY_FAX, CLEANORDER_POSTCODE,
CLEANORDER_ADDRDETAIL, ALLSUM, MOVEHOW, MOVEPAY, ORDER_CHK 
</sql>

<resultMap type="Model.DTO.care.CleanOrderDTO" id="orderList" >
	<id column="CLEANORDER_NO" jdbcType="VARCHAR" property="cleanorderNo"/>
	<id column="EMPLOYEE_NO" jdbcType="VARCHAR" property="employeeNo"/>
	<result column="CLEANORDER_DATE" jdbcType="DATE" property="cleanorderDate"/>
	<result column="CLEANORDER_RECEIVE_DATE" jdbcType="DATE" property="cleanorderReceiveDate"/>
	<result column="CLEANORDER_COMPANY_NAME" jdbcType="VARCHAR" property="cleanorderCompanyName"/>
	<result column="CLEANORDER_ADDRESS" jdbcType="VARCHAR" property="cleanorderAddress"/>
	<result column="CLEANORDER_COMPANY_HP" jdbcType="BIGINT" property="cleanorderCompanyPh"/>
	<result column="CLEANORDER_COMPANY_FAX" jdbcType="BIGINT" property="cleanorderCompanyFax"/>
	<result column="CLEANORDER_POSTCODE" jdbcType="VARCHAR" property="cleanorderPostcode"/>
	<result column="CLEANORDER_ADDRDETAIL" jdbcType="VARCHAR" property="cleanorderAddrdetail"/>
	<result column="ALLSUM" jdbcType="BIGINT" property="allsum"/>
	<result column="MOVEHOW" jdbcType="VARCHAR" property="moveHow"/>
	<result column="MOVEPAY" jdbcType="VARCHAR" property="movePay"/>
	<result column="ORDER_CHK" jdbcType="VARCHAR" property="orderChk" />
</resultMap>


<select id="orderInsert" parameterType="Model.DTO.care.CleanOrderDTO">
	insert into cleanorder (<include refid="cleanOrderBase"/>)
	
	values (cleanitem_seq.nextval,#{employeeNo},#{cleanorderDate},#{cleanorderReceiveDate},
	#{cleanorderCompanyName},#{cleanorderAddress},#{cleanorderCompanyPh},
	#{cleanorderCompanyFax},#{cleanorderPostcode},#{cleanorderAddrdetail},
	#{allsum},#{moveHow},#{movePay},null
	)
</select>
	<resultMap type="Model.DTO.care.EmptoItemOrderDTO" id="EtoODTO">
		<association property="empDTO" javaType="Model.DTO.care.EmployeeDTO" resultMap="empList"/>
		<association property="orderDTO" javaType="Model.DTO.care.CleanOrderDTO" resultMap="orderList"/>
	</resultMap>

<select id="orderListSelect" resultMap="EtoODTO" > 
	select e.employee_name,e.employee_Ph,e.employee_Email, c.*
	from employee e , cleanorder c
	where e.employee_no = c.employee_no 
</select>

<update id="orderChk" parameterType="Model.DTO.care.CleanOrderDTO">
	update cleanorder 
		set order_chk = 1
	where cleanorder_no = #{cleanorderNo}
	and order_chk is null
</update>
<sql id="itemBase">
	CLEANITEM_NO, CLEANITEM_NAME, CLEANITEM_PRICE, CLEANITEM_QTY
    CLEANITEM_SUMPRICE
</sql>

<insert id="itemInsert" parameterType="Model.DTO.care.CleanItemDTO">

		insert into cleanitem (<include refid="itemBase"/>)
		values ( item_seq.nextval,#{cleanitemName}, #{cleanitemPrice} ,#{cleanitemQty}, #{cleanitemSumprice})

</insert>



<select id="orderTableDetail" parameterType="Model.DTO.care.CleanOrderDTO"  resultMap="orderList">
	select  <include refid="cleanOrderBase"   />
		from cleanorder 
		where cleanorder_No = #{cleanorderNo}
</select>

<select id="empDetail" parameterType="Model.DTO.care.EmployeeDTO" resultMap="empList">
	select <include refid="empBase" />
	from employee
	where employee_no = #{employeeNo}

</select>


</mapper>